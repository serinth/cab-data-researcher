// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/cabService.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/cabService.proto
	proto/healthService.proto

It has these top-level messages:
	MedallionId
	NumberOfTripsResponse
	HealthStatus
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type MedallionId struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	SkipCache string `protobuf:"bytes,2,opt,name=skipCache" json:"skipCache,omitempty"`
}

func (m *MedallionId) Reset()                    { *m = MedallionId{} }
func (m *MedallionId) String() string            { return proto1.CompactTextString(m) }
func (*MedallionId) ProtoMessage()               {}
func (*MedallionId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MedallionId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MedallionId) GetSkipCache() string {
	if m != nil {
		return m.SkipCache
	}
	return ""
}

type NumberOfTripsResponse struct {
	NumberOfTrips int64 `protobuf:"varint,1,opt,name=numberOfTrips" json:"numberOfTrips,omitempty"`
}

func (m *NumberOfTripsResponse) Reset()                    { *m = NumberOfTripsResponse{} }
func (m *NumberOfTripsResponse) String() string            { return proto1.CompactTextString(m) }
func (*NumberOfTripsResponse) ProtoMessage()               {}
func (*NumberOfTripsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NumberOfTripsResponse) GetNumberOfTrips() int64 {
	if m != nil {
		return m.NumberOfTrips
	}
	return 0
}

func init() {
	proto1.RegisterType((*MedallionId)(nil), "proto.MedallionId")
	proto1.RegisterType((*NumberOfTripsResponse)(nil), "proto.NumberOfTripsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Cab service

type CabClient interface {
	GetCabTripsCount(ctx context.Context, in *MedallionId, opts ...grpc.CallOption) (*NumberOfTripsResponse, error)
}

type cabClient struct {
	cc *grpc.ClientConn
}

func NewCabClient(cc *grpc.ClientConn) CabClient {
	return &cabClient{cc}
}

func (c *cabClient) GetCabTripsCount(ctx context.Context, in *MedallionId, opts ...grpc.CallOption) (*NumberOfTripsResponse, error) {
	out := new(NumberOfTripsResponse)
	err := grpc.Invoke(ctx, "/proto.Cab/GetCabTripsCount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cab service

type CabServer interface {
	GetCabTripsCount(context.Context, *MedallionId) (*NumberOfTripsResponse, error)
}

func RegisterCabServer(s *grpc.Server, srv CabServer) {
	s.RegisterService(&_Cab_serviceDesc, srv)
}

func _Cab_GetCabTripsCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MedallionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CabServer).GetCabTripsCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cab/GetCabTripsCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CabServer).GetCabTripsCount(ctx, req.(*MedallionId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cab_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Cab",
	HandlerType: (*CabServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCabTripsCount",
			Handler:    _Cab_GetCabTripsCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/cabService.proto",
}

func init() { proto1.RegisterFile("proto/cabService.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x4e, 0x4c, 0x0a, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x03, 0x0b, 0x08,
	0xb1, 0x82, 0x29, 0x29, 0x99, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0xfd, 0xc4, 0x82, 0x4c, 0xfd,
	0xc4, 0xbc, 0xbc, 0xfc, 0x92, 0xc4, 0x92, 0xcc, 0xfc, 0xbc, 0x62, 0x88, 0x22, 0x25, 0x6b, 0x2e,
	0x6e, 0xdf, 0xd4, 0x94, 0xc4, 0x9c, 0x9c, 0xcc, 0xfc, 0x3c, 0xcf, 0x14, 0x21, 0x3e, 0x2e, 0xa6,
	0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0xa6, 0xcc, 0x14, 0x21, 0x19, 0x2e, 0xce,
	0xe2, 0xec, 0xcc, 0x02, 0xe7, 0xc4, 0xe4, 0x8c, 0x54, 0x09, 0x26, 0xb0, 0x30, 0x42, 0x40, 0xc9,
	0x96, 0x4b, 0xd4, 0xaf, 0x34, 0x37, 0x29, 0xb5, 0xc8, 0x3f, 0x2d, 0xa4, 0x28, 0xb3, 0xa0, 0x38,
	0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x85, 0x8b, 0x37, 0x0f, 0x59, 0x02, 0x6c,
	0x22, 0x73, 0x10, 0xaa, 0xa0, 0x51, 0x0a, 0x17, 0xb3, 0x73, 0x62, 0x92, 0x50, 0x2c, 0x97, 0x80,
	0x7b, 0x6a, 0x89, 0x73, 0x62, 0x12, 0x58, 0xd4, 0x39, 0xbf, 0x34, 0xaf, 0x44, 0x48, 0x08, 0xe2,
	0x3c, 0x3d, 0x24, 0xb7, 0x49, 0xc9, 0x40, 0xc5, 0xb0, 0x5a, 0xa9, 0x24, 0xde, 0x74, 0xf9, 0xc9,
	0x64, 0x26, 0x41, 0x21, 0x7e, 0x50, 0x40, 0xe8, 0x57, 0x67, 0xa6, 0xd4, 0xea, 0x97, 0x80, 0x14,
	0x24, 0xb1, 0x81, 0x75, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x7f, 0x21, 0x8a, 0x27,
	0x01, 0x00, 0x00,
}
