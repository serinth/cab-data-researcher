// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package cacheService is a generated GoMock package.
package cacheService

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCacheService is a mock of CacheService interface
type MockCacheService struct {
	ctrl     *gomock.Controller
	recorder *MockCacheServiceMockRecorder
}

// MockCacheServiceMockRecorder is the mock recorder for MockCacheService
type MockCacheServiceMockRecorder struct {
	mock *MockCacheService
}

// NewMockCacheService creates a new mock instance
func NewMockCacheService(ctrl *gomock.Controller) *MockCacheService {
	mock := &MockCacheService{ctrl: ctrl}
	mock.recorder = &MockCacheServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCacheService) EXPECT() *MockCacheServiceMockRecorder {
	return m.recorder
}

// CacheCabTripCount mocks base method
func (m *MockCacheService) CacheCabTripCount(ctx context.Context, id string, count int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CacheCabTripCount", ctx, id, count)
	ret0, _ := ret[0].(error)
	return ret0
}

// CacheCabTripCount indicates an expected call of CacheCabTripCount
func (mr *MockCacheServiceMockRecorder) CacheCabTripCount(ctx, id, count interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CacheCabTripCount", reflect.TypeOf((*MockCacheService)(nil).CacheCabTripCount), ctx, id, count)
}

// GetTripCount mocks base method
func (m *MockCacheService) GetTripCount(ctx context.Context, id string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTripCount", ctx, id)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTripCount indicates an expected call of GetTripCount
func (mr *MockCacheServiceMockRecorder) GetTripCount(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTripCount", reflect.TypeOf((*MockCacheService)(nil).GetTripCount), ctx, id)
}
